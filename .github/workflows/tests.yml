name: Tests
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    name: "py${{ matrix.python-version }} / ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]
        os: [windows-latest]
        # python-version: ["3.8", "3.9"]
        # os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     auto-update-conda: true
      #     python-version: ${{ matrix.python-version }}
      # - uses: ilammy/msvc-dev-cmd@v1
      #   if: runner.os == 'Windows'
      # - name: Install gfortran on macos
      #   if: runner.os == 'macOS'
      #   shell: bash -l {0}
      #   run: conda install -c conda-forge fortran-compiler
      - shell: bash
        run: |
          echo "[build]" > setup.cfg
          echo "compiler=mingw32" >> setup.cfg
          cat setup.cfg
      - name: Install dependencies
        run: |
          python -m pip install -U pip pytest
          python -m pip install --verbose .
        # env:
        #   DISTUTILS_USE_SDK: 1
        #   MSSdk: 1
      - run: python -c 'import fsps;print(fsps.__version__)'
      - name: Run tests
        run: python -m pytest -v tests/tests.py

  docs:
    name: "docs"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install -U pip sphinx
          python -m pip install .
      - name: Build documentation
        continue-on-error: true
        run: .github/workflows/build_docs.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
